@using TSPadel_Umbraco.Models;
@using TSPadel_Umbraco.Controller;
@model ApplicationFormModel

@{
    Html.EnableClientValidation(true);
    Html.EnableUnobtrusiveJavaScript(true);
}

@if (!ViewData.ModelState.IsValid)
{
    foreach (ModelState modelState in ViewData.ModelState.Values)
    {
        var errors = modelState.Errors;

        if (errors.Any())
        {
            <ul>
                @foreach (ModelError error in errors)
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        }
    }
}
@using (Html.BeginUmbracoForm<ApplicationFormSurfaceController>("ApplicationFormBlock", null, new { @id = "applicationForm" }))
{
    @Html.ValidationSummary("applicationFormModel", true)
    <div class="col-12 p-0" style="background-color: #f0f0f0;">
        <div class="col-12 applicationForm">
            <div class="form-body">
                <div class="subheadingFormat-parent">
                    <b class="subheadingFormat">YOUR DETAILS</b>
                </div>
                <br />
                <div class="blog-text-container">
                    <div class="blog-text pb-0">
                        <p class="text-center">
                            To commence your application please complete the Your Details section below. You can save your application at any point by clicking the save button.

                        </p><p class="text-center">
                            Make a note of the URL at the top of the screen to come back to your application at any time prior to submission.

                        </p><p class="text-center">

                            We will also send you an e-mail containing the link to retrieve your application.
                        </p>
                    </div>
                    <div class="blog-text">
                        <div class="inputBoxes-wrapper">
                            <div class="inputBoxes">
                                <div class="col d-flex flex-column">
                                    @Html.TextBoxFor(m => Model.Title, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Title" })
                                    @Html.ValidationMessageFor(m => Model.Title)
                                </div>
                                <div class="col d-flex flex-column">
                                    @Html.TextBoxFor(m => Model.First_Name, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "First Name" })
                                    @Html.ValidationMessageFor(m => Model.First_Name)
                                </div>
                                <div class="col d-flex flex-column">
                                    @Html.TextBoxFor(m => Model.Last_Name, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Last Name" })
                                    @Html.ValidationMessageFor(m => Model.Last_Name)
                                </div>
                            </div>
                            <div class="inputBoxes">
                                <div class="col d-flex flex-column">
                                    @Html.TextBoxFor(m => Model.Phone_Number, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Phone Number" })
                                    @Html.ValidationMessageFor(m => Model.Phone_Number)
                                </div>
                                <div class="col d-flex flex-column">
                                    @Html.TextBoxFor(m => Model.Alt_Phone_Number, new { @class = "form-control yourDetails", @placeholder = "Alternative Phone Number" })
                                    @Html.ValidationMessageFor(m => Model.Alt_Phone_Number)
                                </div>
                            </div>
                            <div class="inputBoxes">
                                <div class="col d-flex flex-column">
                                    @Html.TextBoxFor(m => Model.Email_Address, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Email Address" })
                                    @Html.ValidationMessageFor(m => Model.Email_Address)
                                </div>
                                <div class="col d-flex flex-column">
                                    @Html.TextBoxFor(m => Model.Conf_Email_Address, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Confirm Email Address" })
                                    @Html.ValidationMessageFor(m => Model.Conf_Email_Address)
                                </div>
                            </div>
                            <div class="inputBoxes">
                                <div class="col d-flex flex-column">
                                    @Html.TextBoxFor(m => Model.Job_Role, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Role" })
                                    @Html.ValidationMessageFor(m => Model.Job_Role)
                                </div>
                                <div class="col d-flex flex-column">
                                    @Html.TextBoxFor(m => Model.Corr_Address, new { @class = "form-control yourDetails", @placeholder = "Correspondence Address (if different from organisation address)" })
                                    @Html.ValidationMessageFor(m => Model.Corr_Address)
                                </div>
                            </div>
                            <div class="pt-4 mb-4 p-0 m-0 d-flex justify-content-end startButtonDiv">
                                <input type="submit" class="application-start" formnovalidate value="Start" id="startButton">
                            </div>
                            <div class="p-0 m-0">
                                <button type="submit" class="application-save" formnovalidate>Save</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 fullDetails">
            <div class="form-body">
                <div class="subheadingFormat-parent">
                    <b class="subheadingFormat">PART 1</b>

                </div>
                <div class="blog-text-container">
                    <div class="blog-text">
                        <div class="inputBoxes-wrapper">
                            <label>1. Name your organisation is normally known by. <br> This could be a working name, trading name or the name you use on your organisation’s website or letterhead.</label>
                            <div class="col d-flex flex-column">
                                @Html.TextBoxFor(m => Model.Org_Name, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Organisation Name" })
                                @Html.ValidationMessageFor(m => Model.Org_Name)
                            </div>

                            <label>2. Legal name of organisation (if different from above). <br> This should be the name on your governing documents, accounts, or registration certificate.</label>
                            <div class="col d-flex flex-column">
                                @Html.TextBoxFor(m => Model.Legal_Org_Name, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Legal Organisation Name" })
                                @Html.ValidationMessageFor(m => Model.Legal_Org_Name)
                            </div>

                            <label>3. What is the legal entity of your organisation?  <br>Charity,  CIO, CIC, Constituted Community Group. </label>
                            <div class="col d-flex flex-column">
                                @Html.TextBoxFor(m => Model.Legal_Entity, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Legal Entity" })
                                @Html.ValidationMessageFor(m => Model.Legal_Entity)
                            </div>

                            <label>4. Have you applied to the TSPadel fund before? If YES, when?</label>
                            @*Html.DropDownListFor(n => n.Applicant_Type, new SelectList(Model.ApplicantDrops, "ApplicantValue", "ApplicantName"), new { @class = "form-control form-control-md rounded-0 g-py-0 w-100 ", id = "Previous_Applicant", required = (string)null })*@
                            <select class="form-control" id="Previous_Applicant" name="Previous_Applicant" onchange="toggleInput()">
                                <option value="" disable="" selected="">Please select</option>
                                <option value="1">Yes</option>
                                <option value="0">No</option>
                            </select>

                            <div id="Conditional_Input" style="display:none;">
                                <div class="col d-flex flex-column">
                                    @Html.TextBoxFor(m => Model.Previous_Applicant_Date, new { @type = "date", @class = "form-control yourDetails", required = (string)null, @placeholder = "When?", @value = "{0:yyyy-MM-dd}" })
                                    @Html.ValidationMessageFor(m => Model.Previous_Applicant_Date)
                                </div>
                            </div>

                            <label>5. Name of your Chair or CEO and email address</label>
                            <div class="inputBoxes">
                                <div class="col d-flex flex-column">
                                    @Html.TextBoxFor(m => Model.Ceo_Name, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Chair/CEO Name" })
                                    @Html.ValidationMessageFor(m => Model.Ceo_Name)
                                </div>
                                <div class="col d-flex flex-column">
                                    @Html.TextBoxFor(m => Model.Ceo_Email, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "CEO Email Address" })
                                    @Html.ValidationMessageFor(m => Model.Ceo_Email)
                                </div>
                            </div>

                            <label>6. Main office or registered address for your organisation</label>
                            <div class="col d-flex flex-column">
                                @Html.TextBoxFor(m => Model.Main_Address, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Main Address" })
                                @Html.ValidationMessageFor(m => Model.Main_Address)
                            </div>

                            <label>7. Post Code</label>
                            <div class="col d-flex flex-column">
                                @Html.TextBoxFor(m => Model.Post_Code, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Post Code" })
                                @Html.ValidationMessageFor(m => Model.Post_Code)
                            </div>

                            <label>8. Telephone Number</label>
                            <div class="col d-flex flex-column">
                                @Html.TextBoxFor(m => Model.Office_Phone_Number, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Office Phone Number" })
                                @Html.ValidationMessageFor(m => Model.Office_Phone_Number)
                            </div>

                            <label>9. Website<br>Please provide your website address or explain why you do not have one.</label>
                            <div class="col d-flex flex-column">
                                @Html.TextBoxFor(m => Model.Website_Url, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Website URL" })
                                @Html.ValidationMessageFor(m => Model.Website_Url)
                            </div>

                            <label>10. Details of your social media accounts:  <br>Facebook, Twitter, Instagram etc.</label>
                            <div class="col d-flex flex-column">
                                @Html.TextBoxFor(m => Model.Social_Media, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Social Media" })
                                @Html.ValidationMessageFor(m => Model.Social_Media)
                            </div>

                            <label>11. Charity number (if you have one)</label>
                            <div class="col d-flex flex-column">
                                @Html.TextBoxFor(m => Model.Charity_Number, new { @class = "form-control yourDetails", @placeholder = "Charity Phone Number" })
                                @Html.ValidationMessageFor(m => Model.Charity_Number)
                            </div>

                            <label>12. When was your organisation established? </label>
                            <div class="col d-flex flex-column">
                                @Html.TextBoxFor(m => Model.Org_Est_Date, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control yourDetails", required = (string)null, @placeholder = "When?", @value = "{0:yyyy-MM-dd}" })
                                @Html.ValidationMessageFor(m => Model.Org_Est_Date)
                            </div>

                            <label>13. Which geographic region(s) does your organisation cover? </label>
                            @Html.DropDownListFor(n => n.Regions, new SelectList(Model.RegionDrops, "RegionValue", "RegionName"), new { @class = "form-control form-control-md rounded-0 g-py-0 w-100 ", id = "RegionDrop", required = (string)null })

                            <label>14. Which specific locations do you work in?<br>Please tell us the main locations you work in (e.g., local authority, towns, regions where most of your beneficiaries come from.)</label>
                            <div class="col d-flex flex-column">
                                @Html.TextBoxFor(m => Model.Main_Locations, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Work Location" })
                                @Html.ValidationMessageFor(m => Model.Main_Locations)
                            </div>

                            <label>15. How many full-time paid staff do you employ?<br>By this we mean salaried staff not freelance or contracted service providers.</label>
                            <div class="col d-flex flex-column">
                                @Html.TextBoxFor(m => Model.Full_Staff_Employed, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Please enter a valid number", @type = "number", @min = "0", @step = "1", @inputmode = "numeric" })
                                @Html.ValidationMessageFor(m => Model.Full_Staff_Employed)
                            </div>

                            <label>16. How many part-time paid staff do you employ?<br>By this we mean salaried staff not freelance or contracted service providers</label>
                            <div class="col d-flex flex-column">
                                @Html.TextBoxFor(m => Model.Part_Staff_Employed, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Please enter a valid number", @type = "number", @min = "0", @step = "1", @inputmode = "numeric" })
                                @Html.ValidationMessageFor(m => Model.Part_Staff_Employed)
                            </div>

                            <label>17. How many volunteers do you have (excluding any management committee members or Trustees)</label>
                            <div class="col d-flex flex-column">
                                @Html.TextBoxFor(m => Model.Volunteers_Employed, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Please enter a valid number", @type = "number", @min = "0", @step = "1", @inputmode = "numeric" })
                                @Html.ValidationMessageFor(m => Model.Volunteers_Employed)
                            </div>

                            <label>18. How often does your management board meet?</label>
                            <div class="col d-flex flex-column">
                                @Html.TextBoxFor(m => Model.Meetings_Timetable, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Please enter a valid answer" })
                                @Html.ValidationMessageFor(m => Model.Meetings_Timetable)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 fullDetails">
            <div class="form-body">
                <div class="subheadingFormat-parent">
                    <b class="subheadingFormat">1.1 YOUR REQUEST</b>
                </div>
                <div class="blog-text-container">
                    <div class="blog-text">
                        <div class="inputBoxes-wrapper">
                            <label>19. How much are you requesting? Please see Application Guidelines for more information. The maximum amount you can apply for is £35,000. Remember you can only ask for a maximum of 15% of your last year’s income.</label>
                            <div class="col d-flex flex-column">
                                @Html.TextBoxFor(m => Model.Amount_Requested, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Enter Amount (£)", @type = "number", @min = "0", @max = "35000", @step = "1", @inputMode = "decimal" })
                                @Html.ValidationMessageFor(m => Model.Amount_Requested)
                            </div>

                            <label>20. If you are successful, what is your funding transition plan leading up to when funding from TSPadel ceases? </label>
                            <div class="col d-flex flex-column">
                                @Html.TextBoxFor(m => Model.Transition_Plan, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Transition Plan" })
                                @Html.ValidationMessageFor(m => Model.Transition_Plan)
                            </div>

                            <label>21. What type of funding are you applying for? Core, Project, or a combination?</label>
                            @Html.DropDownListFor(n => n.Funding_Type, new SelectList(Model.FundingDrops, "FundingValue", "FundingName"), new { @class = "form-control form-control-md rounded-0 g-py-0 w-100 ", id = "FundingDrop", required = (string)null })

                            <label>22. What is the title of your project/bid for funding? </label>
                            <div class="col d-flex flex-column">
                                @Html.TextBoxFor(m => Model.Project_Title, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Project Title" })
                                @Html.ValidationMessageFor(m => Model.Project_Title)
                            </div>

                            <label>23. In one sentence what is the aim of your project? </label>
                            <div class="col d-flex flex-column">
                                @Html.TextBoxFor(m => Model.Project_Aim, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Project Aim" })
                                @Html.ValidationMessageFor(m => Model.Project_Aim)
                            </div>

                            <label>24. What 3-5 outcomes will you use to monitor the effectiveness of your project?</label>
                            <div class="col d-flex flex-column">
                                @Html.TextAreaFor(m => Model.Effective_Outcomes, new { @class = "form-control yourDetails word-count", required = (string)null, @rows = "10", @data_maxwordcount = "200", @data_wordcountgroup = "1", @placeholder = "Effective Outcomes" })
                                @Html.ValidationMessageFor(m => Model.Effective_Outcomes)

                                <p class="d-flex flex-column"><span class="word-count-show" data-wordcountgroup="1">0/200</span></p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 fullDetails">
            <div class="form-body">
                <div class="subheadingFormat-parent">
                    <b class=" subheadingFormat">1.2 FINANCIAL INFORMATION</b>

                </div>
                <div class="blog-text-container">
                    <div class="blog-text">
                        <div class="inputBoxes-wrapper">
                            <label>25. From your most recent accounts tell us the year end the accounts cover.</label>
                            <div class="col d-flex flex-column">
                                @Html.TextBoxFor(m => Model.Accounts_End, "{0:yyyy-MM-dd}", new { @class = "form-control yourDetails", required = (string)null, @type = "date", @placeholder = "Accounts End", @value = "{0:yyyy-MM-dd}" })
                                @Html.ValidationMessageFor(m => Model.Accounts_End)
                            </div>

                            <label>26. What was your income in that year?</label>
                            <div class="col d-flex flex-column">
                                @Html.TextBoxFor(m => Model.Income, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Enter Amount (£)", @type = "number", @min = "0", @step = "1", @inputMode = "decimal" })
                                @Html.ValidationMessageFor(m => Model.Income)
                            </div>

                            <label>27. What was your expenditure in that year?</label>
                            <div class="col d-flex flex-column">
                                @Html.TextBoxFor(m => Model.Expenditure, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Enter Amount (£)", @type = "number", @min = "0", @step = "1", @inputMode = "decimal" })
                                @Html.ValidationMessageFor(m => Model.Expenditure)
                            </div>

                            <label>28. What is the level of your free reserves? <br> By free reserves we mean the unrestricted funds you hold. Funding that is not committed, restricted, or designated or tied up in fixed assets.</label>
                            <div class="col d-flex flex-column">
                                @Html.TextBoxFor(m => Model.Free_Reserves, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Please enter a valid answer", @type = "number", @inputMode = "decimal" })
                                @Html.ValidationMessageFor(m => Model.Free_Reserves)
                            </div>

                            <label>29. How many people must authorise payments on your bank account(s)?</label>
                            <div class="col d-flex flex-column">
                                @Html.TextBoxFor(m => Model.Bank_Authorisers, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Please enter a valid answer", @type = "number", @inputmode = "numeric" })
                                @Html.ValidationMessageFor(m => Model.Bank_Authorisers)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 fullDetails">
            <div class="form-body">
                <div class="subheadingFormat-parent">
                    <b class="subheadingFormat">PART 2</b>
                    <b class="subheadingFormat">2.1 Please provide brief answers to the questions below: </b>

                </div>
                <div class="blog-text-container">
                    <div class="blog-text">
                        <div class="inputBoxes-wrapper">
                            <label><b>a) A brief introduction to your organisation </b><br><br>Tell us about your organisation. This should include something about when you were established, how many beneficiaries you support annually, how you are funded, and anything else you think we should know.</label>
                            <div class="col d-flex flex-column">
                                @Html.TextAreaFor(m => Model.Org_Intro, new { @class = "form-control yourDetails word-count", required = (string)null, @rows = "10", @data_maxwordcount = "500", @data_wordcountgroup = "2" })
                                @Html.ValidationMessageFor(m => Model.Org_Intro)

                                <p class="d-flex flex-column"><span class="word-count-show" data-wordcountgroup="2">0/500</span></p>
                            </div>

                            <label><b>b) Details of the project/core funding that you are asking TSPadel to fund </b><br><br>Tell us about the project/activities you are seeking to fund: why this is needed; who will benefit; what difference this funding will make to the beneficiaries; what the outcomes of the project/activities will be. </label>
                            <div class="col d-flex flex-column">
                                @Html.TextAreaFor(m => Model.Funding_Details, new { @class = "form-control yourDetails word-count", required = (string)null, @rows = "10", @data_maxwordcount = "500", @data_wordcountgroup = "3" })
                                @Html.ValidationMessageFor(m => Model.Funding_Details)

                                <p class="d-flex flex-column"><span class="word-count-show" data-wordcountgroup="3">0/500</span></p>
                            </div>
                            <div class="application-form-col">
                                <div class="col-md-6 p-0 m-0">
                                    <label><b>c) A full breakdown of the costs you are requesting</b><br><br></label>
                                </div>
                                <div class="col-12 p-0 d-flex align-items-center">
                                    <div class="col-md-6 p-0 m-0">
                                        <label class="col-8 p-0 m-0" for="Cost_Breakdown_Accounts">i) Your annual accounts on a spreadsheet</label>
                                    </div>
                                    <div class="col-md-6 p-0 m-0">
                                        <input type="file" id="Cost_Breakdown_Accounts_File" name="Cost_Breakdown_Accounts_File" class="hidden" onchange="handleFileUpload(this, 'Cost_Breakdown_Accounts_Label')" />
                                        <label for="Cost_Breakdown_Accounts_File" class="btn btn-turq">Upload File</label>
                                        <span id="Cost_Breakdown_Accounts_Label">
                                            @if (@Model.Cost_Breakdown_Accounts != null && @Model.Cost_Breakdown_Accounts != "")
                                            {
                                                <a href="~/FileUploads/@Model.ApplicationCode/@Model.Cost_Breakdown_Accounts" target="_blank">@Model.Cost_Breakdown_Accounts</a>
                                            }
                                        </span>
                                    </div>
                                </div>

                                <div class="col-12 p-0 d-flex align-items-center">
                                    <div class="col-md-6 p-0 m-0">
                                        <label class="col-8 p-0 m-0" for="Cost_Breakdown_Statement">ii) A recent bank statement (from the last 3 months)</label>
                                    </div>
                                    <div class="col-md-6 p-0 m-0">
                                        <input type="file" id="Cost_Breakdown_Statement_File" name="Cost_Breakdown_Statement_File" class="hidden" onchange="handleFileUpload(this, 'Cost_Breakdown_Statement_Label')" />
                                        <label for="Cost_Breakdown_Statement_File" class="btn btn-turq">Upload File</label>
                                        <span id="Cost_Breakdown_Statement_Label">
                                            @if (@Model.Cost_Breakdown_Statement != null && @Model.Cost_Breakdown_Statement != "")
                                            {
                                                <a href="~/FileUploads/@Model.ApplicationCode/@Model.Cost_Breakdown_Statement" target="_blank">@Model.Cost_Breakdown_Statement</a>
                                            }
                                        </span>
                                    </div>
                                </div>
                                <b>If your organisation is too new to have accounts, then send  ii)  only.</b>
                                <div class="col-12 p-0 d-flex align-items-center">
                                    <div class="col-md-6 p-0 m-0">
                                        <label class="col-8 p-0 m-0" for="Cost_Breakdown_Statement">iii) Full breakdown of the costs</label>
                                    </div>
                                    <div class="col-md-6 p-0 m-0">
                                        <input type="file" id="Full_Cost_Breakdown_Statement_File" name="Full_Cost_Breakdown_Statement_File" class="hidden" onchange="handleFileUpload(this, 'Full_Cost_Breakdown_Statement_Label')" />
                                        <label for="Full_Cost_Breakdown_Statement_File" class="btn btn-turq">Upload File</label>
                                        <span id="Full_Cost_Breakdown_Statement_Label">
                                            @if (@Model.Full_Cost_Breakdown_Statement != null && @Model.Full_Cost_Breakdown_Statement != "")
                                            {
                                                <a href="~/FileUploads/@Model.ApplicationCode/@Model.Full_Cost_Breakdown_Statement" target="_blank">@Model.Full_Cost_Breakdown_Statement</a>
                                            }
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="application-form-col">
                                <label>
                                    <b>d) Submit three key policies:</b>
                                </label>
                                <div class="col-12 p-0 d-flex align-items-center">
                                    <div class="col-md-6 p-0 m-0">
                                        <label class="col-8 p-0 m-0" for="Key_Policy_1">i) Equality, diversity and inclusion</label>
                                    </div>
                                    <div class="col-md-6 p-0 m-0">
                                        <input type="file" id="Key_Policy_1_File" name="Key_Policy_1_File" class="hidden" onchange="handleFileUpload(this, 'Key_Policy_1_Label')" />
                                        <label for="Key_Policy_1_File" class="btn btn-turq">Upload File</label>
                                        <span id="Key_Policy_1_Label">
                                            @if (@Model.Key_Policy_1 != null && @Model.Key_Policy_1 != "")
                                            {
                                                <a href="~/FileUploads/@Model.ApplicationCode/@Model.Key_Policy_1" target="_blank">@Model.Key_Policy_1</a>
                                            }
                                        </span>
                                    </div>
                                </div>
                                <div class="col-12 p-0 d-flex align-items-center">
                                    <div class="col-md-6 p-0 m-0">
                                        <label class="col-8 p-0 m-0" for="Key_Policy_2">ii) Safeguarding policies for children and young people and adults (as applicable)</label>
                                    </div>
                                    <div class="col-md-6 p-0 m-0">
                                        <input type="file" id="Key_Policy_2_File" name="Key_Policy_2_File" class="hidden" onchange="handleFileUpload(this, 'Key_Policy_2_Label')" />
                                        <label for="Key_Policy_2_File" class="btn btn-turq">Upload File</label>
                                        <span id="Key_Policy_2_Label">
                                            @if (@Model.Key_Policy_2 != null && @Model.Key_Policy_2 != "")
                                            {
                                                <a href="~/FileUploads/@Model.ApplicationCode/@Model.Key_Policy_2" target="_blank">@Model.Key_Policy_2</a>
                                            }
                                        </span>
                                    </div>
                                </div>
                                <div class="col-12 m-0 p-0 d-flex align-items-center">
                                    <div class="col-md-6 p-0 m-0">
                                        <label class="col-8 p-0 m-0" for="Key_Policy_3">iii) Health and safety policy</label>
                                    </div>
                                    <div class="col-md-6 p-0 m-0">
                                        <input type="file" id="Key_Policy_3_File" name="Key_Policy_3_File" class="hidden" onchange="handleFileUpload(this, 'Key_Policy_3_Label')" />
                                        <label for="Key_Policy_3_File" class="btn btn-turq">Upload File</label>
                                        <span id="Key_Policy_3_Label">
                                            @if (@Model.Key_Policy_3 != null && @Model.Key_Policy_3 != "")
                                            {
                                                <a href="~/FileUploads/@Model.ApplicationCode/@Model.Key_Policy_3" target="_blank">@Model.Key_Policy_3</a>
                                            }
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class="application-form-col">
                                <label>
                                    <b>
                                        e) TSPadel takes the issues of sustainability, carbon saving and the environment very seriously. Please tick this box if you have a sustainability policy with clear targets.
                                    </b>
                                </label>
                                <div class="application-buttons m-0 p-0">
                                    <input type="checkbox" id="Sustainbility" name="Sustainability" class="form-check form-check-reverse">
                                </div>

                            </div>
                            <div class="application-form-col">
                                <label>
                                    <b>
                                        f) Upload your Governing Document here
                                    </b>
                                </label>
                                <div class="col-md-6 p-0 m-0">
                                    <input type="file" id="General_Document_File" name="General_Document_File" class="hidden" onchange="handleFileUpload(this, 'General_Document_Label')" />
                                    <label for="General_Document_File" class="btn btn-turq">Upload File</label>
                                    <span id="General_Document_Label">
                                        @if (@Model.General_Document != null && @Model.General_Document != "")
                                        {
                                            <a href="~/FileUploads/@Model.ApplicationCode/@Model.General_Document" target="_blank">@Model.General_Document</a>
                                        }
                                    </span>
                                </div>

                            </div>
                            <div class="application-form-col">
                                <b>Declaration</b>
                                <p>Confirm that you have the authority to apply for funding on behalf of the organisation.</p>
                                <div class="inputBoxes">
                                    <div class="col d-flex flex-column">
                                        @Html.TextBoxFor(m => Model.Declaration_Name, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Name" })
                                        @Html.ValidationMessageFor(m => Model.Declaration_Name)
                                    </div>
                                    <div class="col d-flex flex-column">
                                        @Html.TextBoxFor(m => Model.Declaration_Position, new { @class = "form-control yourDetails", required = (string)null, @placeholder = "Position" })
                                        @Html.ValidationMessageFor(m => Model.Declaration_Position)
                                    </div>
                                    <div class="col d-flex flex-column">
                                        @Html.TextBoxFor(m => Model.Declaration_Date, "{0:yyyy-MM-dd}", new { @class = "form-control yourDetails", required = (string)null, @type = "date", @value = "{0:yyyy-MM-dd}" })
                                        @Html.ValidationMessageFor(m => Model.Declaration_Date)
                                    </div>
                                </div>
                            </div>
                            <div class="p-0 col-12  m-0">
                                <div class="subheadingFormat-parent">
                                    <b class="subheadingFormat">2.2 APPLICATION DEADLINE</b>

                                </div>
                                <p class="pt-4">
                                    Your completed application, including all your supporting documents, listed above, must be received by <b>6pm (18:00hrs) on Monday 19 February 2024.  If you have not submitted all supporting documents your application may be delayed and may fall outside of the deadline.</b><br><br>
                                    <b>Any questions</b><br>
                                    If you have any questions, contact us by email and we will get back to you as soon as we can. Please also check the information and FAQ section of our website before applying.
                                    Please email <a href="mailto:grants@TSPadel.org.uk" style="color: #7f7f7f;">grants@TSPadel.org.uk.</a>
                                </p>
                            </div>
                            <div class="col-12 p-0">
                                <div class="col-md-6 pt-4 mb-4 p-0 m-0">

                                    @Html.HiddenFor(m => Model.ApplicationCode)
                                    @Html.HiddenFor(m => Model.completed)
                                    <input type="submit" id="application-submit" class="btn btn-turq">
                                </div>
                                <div class="col-md-6 pt-4 mb-4 p-0 m-0">
                                    <a href="/application-form-print?ApplicationCode=@Model.ApplicationCode" target="_blank" id="application-print" class="btn btn-white">Print</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12" id="application-submitted" style="display:none">
            <div class="form-body">
                <h3>TSPadel Application Acknowledgement</h3>
                <p>Your application has been received. We will be in touch soon.</p>
            </div>
        </div>
    </div>

}

<script>

    function handleFileUpload(input, labelId) {
        var fileNameLabel = document.getElementById(labelId);
        var fileName = input.files[0] ? input.files[0].name : '';

        var data = new FormData();

        var files = input.files;

        // Add the uploaded image content to the form data collection
        if (files.length > 0) {
            data.append("UploadedFile", files[0]);
            data.append("ApplicationCode", GetURLParameter("applicationcode", ""));
            data.append("FileType", labelId);
        }
        $.ajax({
            // Your server script to process the upload
            url: '/umbraco/Surface/ApplicationFormSurface/uploadFile',
            type: 'POST',
            // Form data
            data: data,
            // Tell jQuery not to process data or worry about content-type
            // You *must* include these options!
            cache: false,
            contentType: false,
            processData: false,

            // Custom XMLHttpRequest
            xhr: function () {
                var myXhr = $.ajaxSettings.xhr();
                if (myXhr.upload) {
                    // For handling the progress of the upload
                    myXhr.upload.addEventListener('progress', function (e) {
                        if (e.lengthComputable) {
                            $('progress').attr({
                                value: e.loaded,
                                max: e.total,
                            });
                            fileNameLabel.innerHTML = e.loaded;
                        }
                    }, false);
                }
                return myXhr;
            },
            success: function (data) {
                var fileLink = document.createElement('a');
                fileLink.textContent = fileName;
                fileLink.href = window.URL.createObjectURL(input.files[0]);
                fileLink.target = "_blank";
                fileNameLabel.innerHTML = '';
                fileNameLabel.appendChild(fileLink);
                $(input).val("");
            }
        });
    }

    $(document).ready(function () {
        @if (Model.ApplicationID == 0) {
            WriteLiteral("$('#startButton').prop('disabled', true);");
            WriteLiteral("$('.fullDetails').hide();");
            WriteLiteral("$('.startButtonDiv').addClass('d-flex');");
        }
        else
        {
            WriteLiteral("$('.startButtonDiv').hide();");
            WriteLiteral("$('.startButtonDiv').removeClass('d-flex');");
            WriteLiteral("$('.fullDetails').show();");
        }
    });

    $("#startButton").on("click", function () {
    $(".fullDetails").show();
        });

        $(".yourDetails").on("change", function () {
            if ($("#Email_Address").val() != "" && $("#Phone_Number").val() != "" && $("#First_Name").val() != "" && $("#Last_Name").val() != "" && $("#Job_Role").val() != "" && $("#Email_Address").val() == $("#Conf_Email_Address").val()) {
                $("#startButton").prop('disabled', false);
            } else {
                $("#startButton").prop('disabled', true);
                $('.startButtonDiv').show();
                $(".startButtonDiv").addClass("d-flex");
                $(".fullDetails").hide();
            }
        });

    function toggleInput() {
        var dropdown = document.getElementById("Previous_Applicant");
        var inputBox = document.getElementById("Conditional_Input");

        if (dropdown.value == "1") {
            inputBox.style.display = "block";
        } else {
            inputBox.style.display = "none";
        }
    }

    $(".word-count").on("keyup", function () {
        var maxWords = $(this).attr("data-maxwordcount");
        var wordcountgroup = $(this).attr("data-wordcountgroup");
        // Get the textarea and span elements
        var textarea = $(".word-count[data-wordcountgroup=" + wordcountgroup + "]");
        var span = $(".word-count-show[data-wordcountgroup=" + wordcountgroup + "]");

        // Get the content of the textarea and split it into words
        var words = textarea.val().split(/\s+/);

        // Filter out empty words (multiple spaces between words etc)
        words = words.filter(function (word) {
            return word.length > 0;
        });

        // Update the word count
        var wordCount = words.length;
        if (wordCount == 0) {
            span.html("Max " + maxWords + " words");
        }
        else {
            span.html(wordCount + "/" + maxWords);
        }
        // Truncate the text if it exceeds the max limit
        if (wordCount > maxWords) {
            var truncatedText = words.slice(0, maxWords).join(' ');
            textarea.innerHTML(truncatedText);
            span.innerHTML(maxWords);
        }

    });

    $(document).ready(function () {
        $(".word-count").trigger("keyup");
    });

</script>
<script>

    $("#application-submit").on("click", function () {
        $("#completed").val("True");
        $("form").validate();
    });

    $(".form-control").on("change", function () {
        $(".application-save").text("Save");
    });
    $("form").on("submit", function (event) {
        event.preventDefault();
        var isSubmit = $("#completed").val();// $(this).hasClass("application-submit");
        var formData = new FormData(this);
        let form = $("#applicationForm");
        let url = form.attr('action');

        $(".application-save").text("Saving...");
        $.ajax({
            type: "POST",
            url: url,
            data: formData,
            success: function (data) {
                // Ajax call completed successfully
                var ApplicationCode = data.ApplicationCode;
                setUrlParameter(window.location.href, "applicationcode", ApplicationCode);
                $("#ApplicationCode").val(ApplicationCode);
                $(".startButtonDiv").hide();
                $(".startButtonDiv").removeClass("d-flex");
                $(".application-save").text("Saved");
                // Clear file input fields one by one
                $("#Cost_Breakdown_Accounts_File").val(''); // Clear Cost_Breakdown_Accounts file input
                $("#Cost_Breakdown_Statement_File").val(''); // Clear Cost_Breakdown_Statement file input
                $("#Full_Cost_Breakdown_Statement_File").val(''); // Clear Full_Cost_Breakdown_Statement file input
                $("#Key_Policy_1_File").val(''); // Clear Key_Policy_1 file input
                $("#Key_Policy_2_File").val(''); // Clear Key_Policy_2 file input
                $("#Key_Policy_3_File").val(''); // Clear Key_Policy_3 file input
                $("#General_Document_File").val(''); // Clear General_Document file input
                if (isSubmit == "True" && $("form").valid()) {
                    $("#application-submitted").show();
                    $(".applicationForm").hide();
                    $(".fullDetails").hide();
                    $('html, body').scrollTop($("#application-submitted").offset().top);
                }
            },

            timeout: 3000,
            tryCount: 0,
            retryLimit: 3,
            error: function (xhr, textStatus, errorThrown) {
                if (textStatus === 'timeout') {
                    this.tryCount++;
                    if (this.tryCount <= this.retryLimit) {
                        $.ajax(this);
                        return;
                    }
                    return;
                }
                alert("An error has occurred saving the data and TSPadel have been informed.");
                logError("Application Form", xhr, textStatus, errorThrown);
                return 0;
            },
            cache: false,
            contentType: false,
            processData: false
        });
    });

</script>
